--------------------------a5c79c3ea466745f
Content-Disposition: form-data; name="file"; filename="untitled.txt"
Content-Type: text/plain


apt-get purge do-agent && curl -sSL https://insights.nyc3.cdn.digitaloceanspaces.com/install.sh | sudo bash



https://betaworks.designengine.ai/present/388/smart-home-app
https://founderspad.designengine.ai/inspect/387/monitor-app-sangnguyen94



integrationItems.sort((integration1, integration2)=> ((!integration1.enabled && integration2.enabled) ? -1 : (integration1.enabled && !integration2.enabled) ? 1 : 0))




delete Object.assign(obj, {['accessToken']: obj['access_token'] })['access_token'];


https://github.com/login/oauth/authorize?client_id=e6f08e86acdc4e4cca38&redirect_uri=https://api.designengine.ai/system.php&scope=gist,user:email&state=1554576926


http -fv POST https://api.designengine.ai/system.php action=UPLOAD_STATUS upload_id=123 X-Foo:Bar
http -va mtholcombe:flashmast3r https://api.github.com/user X-Foo:Bar




curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
apt-get install -y nodejs
npm init


npm install -g eslint prettier eslint-plugin-react eslint-config-standard eslint-plugin-import eslint-plugin-node eslint-plugin-promise eslint-plugin-standard eslint-plugin-prettier htmlhint eslint-config-prettier stylelint --save-dev

curl https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip -o sdk-tools-linux-4333796.zip
unzip sdk-tools-linux-4333796.zip
mkdir -p /opt/android-sdk

export ANDROID_SDK_ROOT=/opt/android-sdk/
export PATH=$PATH


apt install default-jre



curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
sudo apt-get update && sudo apt-get install yarn


bindfs#/var/www/processing.designengine.ai /home/crusher_ftp/public_html/processing.designengine.ai fuse force-user=crusher_ftp,force-group=crusher_ftp,create-for-user=www-data,create-for-group=www-data,create-with-perms=0770,chgrp-ignore,chown-ignore,chmod-ignore 0 0

#-- eslint
npm install eslint prettier eslint-plugin-react eslint-config-standard eslint-plugin-import eslint-plugin-node eslint-plugin-promise eslint-plugin-standard eslint-plugin-prettier eslint-config-prettier stylelint --save-dev
npm install -g eslint prettier eslint-plugin-react eslint-config-standard eslint-plugin-import eslint-plugin-node eslint-plugin-promise eslint-plugin-standard eslint-plugin-prettier eslint-config-prettier stylelint --save-dev
npm uninstall eslint eslint-plugin-react eslint-config-standard eslint-plugin-import eslint-plugin-node eslint-plugin-promise eslint-plugin-standard
npm uninstall -g eslint eslint-plugin-react eslint-config-standard eslint-plugin-import eslint-plugin-node eslint-plugin-promise eslint-plugin-standard


convert './artboards/237/F1FDCC23-46FE-478F-AB21-D5EEEEE31F39@3x.png' -quality 100 /nfs/c01/h05/mnt/4086/domains/cdn.designengine.ai/html/pdfs/237/webappflow-copy.pdf 2>&1


http://cdn.designengine.ai/download-pdf.php?upload_id=119

convert -units PixelsPerInch -density 72 ./artboards/119/AAB120FC-5416-493B-AB02-A3D6129FDE27@3x.png ./artboards/119/F6589791-77C1-45E2-880E-5D5EECD93F0A@3x.png ./artboards/119/D442C7ED-17FE-4B7F-8A07-724F4D51816A@3x.png ./artboards/119/7ED55A54-9ACA-4C64-92AA-1ABF0E0E4E0C@3x.png ./artboards/119/DBAFBF1F-08C5-44EF-A3C9-56F9F92C7E6F@3x.png ./artboards/119/05D40D0F-F2BF-40CB-966D-EA4DA1F6F551@3x.png ./artboards/119/0774A229-512A-4FD8-9A8C-B7EBACDE6DF4@3x.png ./artboards/119/1B5C6E8D-1521-4719-804C-30933F5E4348@3x.png ./artboards/119/EB490BDE-6DB0-463F-8A8D-8D8950EEE461@3x.png -quality 100 ./pdfs/uplandprototype.pdf


curl -X POST "https://api.designengine.ai/system.php" -d "action=UPLOAD_STATUS" -d "upload_id=120" -s | python -mjson.tool
curl -X POST "https://api.designengine.ai/system.php" -d "action=GEN_PDF" -d "upload_id=119" -s
curl -X POST "https://api.designengine.ai/system.php" -d "action=SYMBOL_SLICES" -d "slice_id=152114" -s | python -mjson.tool
curl -X POST "https://api.designengine.ai/system.php" -d "action=ARTBOARD_SLICES" -d "artboard_id=5560" -s | python -mjson.tool
curl -X POST "https://api.designengine.ai/system.php" -d "action=PROCESSING_PING" -d "upload_id=114" -s | python -mjson.tool


#-- latest processing times for completed uploads
SELECT * FROM (
   SELECT
      id,
      upload_id,
      start_time,
      end_time,
      CONCAT(
         LPAD(FLOOR((SELECT TIME_TO_SEC(TIMEDIFF(end_time, start_time))) / 60), 2, "0"),
         ":",
         LPAD((SELECT TIME_TO_SEC(TIMEDIFF(end_time, start_time))) - (FLOOR((SELECT TIME_TO_SEC(TIMEDIFF(end_time, start_time))) / 60) * 60), 2, "0")
      ) AS `duration`,
      (SELECT TIME_TO_SEC(TIMEDIFF(end_time, start_time))) AS `secs`
   FROM uploads_process
   WHERE notes = "complete"
   ORDER BY start_time DESC
) AS `t1`
GROUP BY LOWER(t1.upload_id)
ORDER BY upload_id;


# ORDER BY `duration` DESC;


£ΦĢĝ¡й︪


-- DELETE FROM `users` WHERE `email` = "arthur.pewty@gmx.us";
-- SELECT `uploads`.`id` AS `id`, `uploads`.`title` AS `title`, `uploads`.`description` AS `description`, `uploads`.`added` AS `added`, `users`.`username` AS `author`, `users`.`filename` AS `avatar` FROM `uploads` INNER JOIN `users_uploads` ON `uploads`.`id` = `users_uploads`.`upload_id` INNER JOIN `users` ON `users_uploads`.`user_id` = `users`.`id` WHERE `uploads`.`id` = 18 LIMIT 1;

-- delete upload
DELETE FROM `slices` WHERE `id` IN (SELECT `slice_id` FROM `artboards_slices` WHERE `artboard_id` IN (SELECT `artboard_id` FROM `pages_artboards` WHERE `page_id` IN (SELECT `page_id` FROM `uploads_pages` WHERE `upload_id` = 5)));
DELETE FROM `artboards_slices` WHERE `artboard_id` IN (SELECT `artboard_id` FROM `pages_artboards` WHERE `page_id` IN (SELECT `page_id` FROM `uploads_pages` WHERE `upload_id` = 5));
DELETE FROM `comment_votes` WHERE `comment_id` IN (SELECT `comment_id` FROM `artboards_comments` WHERE `artboard_id` IN (SELECT `artboard_id` FROM `pages_artboards` WHERE `page_id` IN (SELECT `page_id` FROM `uploads_pages` WHERE `upload_id` = 5)));
DELETE FROM `comments` WHERE `id` IN (SELECT `comment_id` FROM `artboards_comments` WHERE `artboard_id` IN (SELECT `artboard_id` FROM `pages_artboards` WHERE `page_id` IN (SELECT `page_id` FROM `uploads_pages` WHERE `upload_id` = 5)));
DELETE FROM `artboards_comments` WHERE `artboard_id` IN (SELECT `artboard_id` FROM `pages_artboards` WHERE `page_id` IN (SELECT `page_id` FROM `uploads_pages` WHERE `upload_id` = 5));
DELETE FROM `artboards` WHERE `id` IN (SELECT `artboard_id` FROM `pages_artboards` WHERE `page_id` IN (SELECT `page_id` FROM `uploads_pages` WHERE `upload_id` = 5));
DELETE FROM `pages_artboards` WHERE `page_id` IN (SELECT `page_id` FROM `uploads_pages` WHERE `upload_id` = 5);
DELETE FROM `pages` WHERE `id` IN (SELECT `page_id` FROM `uploads_pages` WHERE `upload_id` = 5);
DELETE FROM `files` WHERE `id` IN (SELECT `file_id` FROM `uploads_files` WHERE `upload_id` = 5);
DELETE FROM `users_files` WHERE `file_id` IN (SELECT `file_id` FROM `uploads_files` WHERE `upload_id` = 5);
DELETE FROM `uploads_files` WHERE `upload_id` = 5;
DELETE FROM `uploads_pages` WHERE `upload_id` = 5;
DELETE FROM `uploads_teams` WHERE `upload_id` = 5;
DELETE FROM `invites` WHERE `upload_id` = 5;
DELETE FROM `users_uploads` WHERE `upload_id` = 5;
DELETE FROM `uploads_process` WHERE `upload_id` = 5;
-- UPDATE `uploads` SET `state` = 0, `processed` = "0000-00-00 00:00:00" WHERE `id` = 5;
DELETE FROM `uploads` WHERE `id` = 5;

-- reset all uploads
TRUNCATE TABLE `slices`;
TRUNCATE TABLE `artboards_slices`;
TRUNCATE TABLE `comment_votes`;
TRUNCATE TABLE `comments`;
TRUNCATE TABLE `artboards_comments`;
TRUNCATE TABLE `artboards`;
TRUNCATE TABLE `pages_artboards`;
TRUNCATE TABLE `pages`;
TRUNCATE TABLE `files`;
TRUNCATE TABLE `users_files`;
TRUNCATE TABLE `uploads_files`;
TRUNCATE TABLE `uploads_pages`;
TRUNCATE TABLE `users_uploads`;
TRUNCATE TABLE `uploads_process`;
TRUNCATE TABLE `uploads`;



-- user uploads
SELECT * FROM (
	SELECT `uploads`.`id` AS `id`, `uploads`.`title` AS `title`, `uploads`.`description` AS `description`, `uploads`.`added` AS `added`
	FROM `uploads`
	INNER JOIN `users_uploads` ON `uploads`.`id` = `users_uploads`.`upload_id`
	INNER JOIN `users` ON `users_uploads`.`user_id` = `users`.`id`
	WHERE `users`.`id` = 44 AND `uploads`.`enabled` = 1
) `tmp`
GROUP BY `tmp`.`title`
ORDER BY `tmp`.`added`
DESC LIMIT 0,10;

SELECT `uploads`.`id` AS `id`, `uploads`.`title` AS `title`, `uploads`.`description` AS `description`, `uploads`.`added` AS `added` FROM `uploads`
INNER JOIN `users_uploads` ON `uploads`.`id` = `users_uploads`.`upload_id`
INNER JOIN `users` ON `users_uploads`.`user_id` = `users`.`id`
WHERE `users`.`id` = %s AND `uploads`.`enabled` = 1
GROUP BY `uploads`.`title`
ORDER BY `uploads`.`added`
DESC LIMIT %s,%s;

-- owned --
SELECT
  `uploads`.`id` AS `id`,
  `uploads`.`title` AS `title`,
  `uploads`.`views` AS `views`,
  `uploads`.`state` AS `state`,
  `uploads`.`private` AS `private`,
  `uploads`.`added` AS `added`
FROM `uploads`
INNER JOIN `users_uploads` ON `uploads`.`id` = `users_uploads`.`upload_id`
WHERE `users_uploads`.`user_id` = %s AND `uploads`.`enabled` = 1
-- team member --
UNION SELECT
  `uploads`.`id` AS `id`,
  `uploads`.`title` AS `title`,
  `uploads`.`views` AS `views`,
  `uploads`.`state` AS `state`,
  `uploads`.`private` AS `private`,
  `uploads`.`added` AS `added`
FROM `uploads`
INNER JOIN `uploads_teams` ON `uploads`.`id` = `uploads_teams`.`upload_id`
INNER JOIN `users_teams` ON `uploads_teams`.`team_id` = `users_teams`.`team_id`
WHERE `users_teams`.`user_id` = %s AND `uploads`.`enabled` = 1
-- history --
UNION SELECT
  `uploads`.`id` AS `id`,
  `uploads`.`title` AS `title`,
  `uploads`.`views` AS `views`,
  `uploads`.`state` AS `state`,
  `uploads`.`private` AS `private`,
  `uploads`.`added` AS `added`
FROM `uploads`
INNER JOIN `users_uploads_history` ON `uploads`.`id` = `users_uploads_history`.`upload_id`
WHERE `users_uploads_history`.`user_id` = %s AND `uploads`.`enabled` = 1
GROUP BY `title` ORDER BY `added` DESC
LIMIT %s,%s;





-- explore pages / logged out
SELECT `id` FROM `pages` WHERE `enabled` = 1 AND `id` IN (
  SELECT `page_id` FROM `uploads_pages` WHERE `upload_id` IN (
    SELECT `id` FROM `uploads` WHERE `enabled` = 1 AND `private` = 0
  )
)
ORDER BY `views` DESC;

-- explore pages / logged in
SELECT `id` FROM `pages`
WHERE `enabled` = 1 AND (
	`id` IN (
		SELECT `page_id` FROM `uploads_pages`
		WHERE `upload_id` IN (
			SELECT `upload_id` FROM `users_uploads` WHERE `user_id` = 44
		)
	)
	OR `id` IN (
		SELECT `page_id` FROM `uploads_pages`
		WHERE `upload_id` IN (
			SELECT `id` FROM `uploads` WHERE `enabled` = 1 AND `private` = 0
		)
	)
)
ORDER BY `views` DESC;



-- upload info
SELECT
	`uploads`.`id` AS `id`,
	`uploads`.`title` AS `title`,
	`uploads`.`description` AS `description`,
	`uploads`.`added` AS `added`,
	`users`.`username` AS `author`,
	`users`.`filename` AS `avatar`
FROM `uploads`
INNER JOIN `users_uploads` ON `uploads`.`id` = `users_uploads`.`upload_id`
INNER JOIN `users` ON `users_uploads`.`user_id` = `users`.`id`
WHERE `uploads`.`id` = 11
LIMIT 1;



-- delete upload
DELETE FROM users_uploads_history WHERE upload_id = @upload_id);
DELETE FROM symbols WHERE id IN (SELECT symbol_id FROM uploads_symbols WHERE upload_id = @upload_id);
DELETE FROM symbols_slices WHERE slice_id IN (SELECT symbol_id FROM uploads_symbols WHERE upload_id = @upload_id);
DELETE FROM uploads_symbols WHERE upload_id = @upload_id;
DELETE FROM slices WHERE id IN (SELECT slice_id FROM artboards_slices WHERE artboard_id IN (SELECT artboard_id FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id = @upload_id)));
DELETE FROM artboards_slices WHERE artboard_id IN (SELECT artboard_id FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id = @upload_id));
DELETE FROM comment_votes WHERE comment_id IN (SELECT comment_id FROM artboards_comments WHERE artboard_id IN (SELECT artboard_id FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id = @upload_id)));
DELETE FROM comments WHERE id IN (SELECT comment_id FROM artboards_comments WHERE artboard_id IN (SELECT artboard_id FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id = @upload_id)));
DELETE FROM artboards_comments WHERE artboard_id IN (SELECT artboard_id FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id = @upload_id));
DELETE FROM artboards WHERE id IN (SELECT artboard_id FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id = @upload_id));
DELETE FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id = @upload_id);
DELETE FROM pages WHERE id IN (SELECT page_id FROM uploads_pages WHERE upload_id = @upload_id);
DELETE FROM files WHERE id IN (SELECT file_id FROM uploads_files WHERE upload_id = @upload_id);
DELETE FROM users_files WHERE file_id IN (SELECT file_id FROM uploads_files WHERE upload_id = @upload_id);
DELETE FROM uploads_files WHERE upload_id = @upload_id;
DELETE FROM uploads_pages WHERE upload_id = @upload_id;
DELETE FROM invites WHERE upload_id = @upload_id;
DELETE FROM users_teams WHERE team_id IN (SELECT team_id FROM uploads_teams WHERE upload_id = @upload_id);
DELETE FROM teams WHERE id IN (SELECT team_id FROM uploads_teams WHERE upload_id = @upload_id);
DELETE FROM uploads_teams WHERE upload_id = @upload_id;
DELETE FROM uploads_process WHERE upload_id = @upload_id;
DELETE FROM users_uploads WHERE upload_id = @upload_id;
DELETE FROM uploads WHERE id = @upload_id;

-- reset upload
DELETE FROM symbols WHERE id IN (SELECT symbol_id FROM uploads_symbols WHERE upload_id = @upload_id);
DELETE FROM symbols_slices WHERE slice_id IN (SELECT symbol_id FROM uploads_symbols WHERE upload_id = @upload_id);
DELETE FROM uploads_symbols WHERE upload_id = @upload_id;
DELETE FROM slices WHERE id IN (SELECT slice_id FROM artboards_slices WHERE artboard_id IN (SELECT artboard_id FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id = @upload_id)));
DELETE FROM artboards_slices WHERE artboard_id IN (SELECT artboard_id FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id = @upload_id));
DELETE FROM comment_votes WHERE comment_id IN (SELECT comment_id FROM artboards_comments WHERE artboard_id IN (SELECT artboard_id FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id = @upload_id)));
DELETE FROM comments WHERE id IN (SELECT comment_id FROM artboards_comments WHERE artboard_id IN (SELECT artboard_id FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id = @upload_id)));
DELETE FROM artboards_comments WHERE artboard_id IN (SELECT artboard_id FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id = @upload_id));
DELETE FROM artboards WHERE id IN (SELECT artboard_id FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id = @upload_id));
DELETE FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id = @upload_id);
DELETE FROM pages WHERE id IN (SELECT page_id FROM uploads_pages WHERE upload_id = @upload_id);
DELETE FROM uploads_pages WHERE upload_id = @upload_id;
UPDATE uploads_process SET enabled = 0 WHERE upload_id = @upload_id;
UPDATE uploads SET artboards = 0, state = 0, enabled = 1, processed = "0000-00-00 00:00:00" WHERE id = @upload_id LIMIT 1;


-- # delete user # --
SET @user_id = 260;

START TRANSACTION;
DELETE FROM github_auths WHERE id IN (SELECT github_id FROM users_github_auths WHERE user_id = @user_id);
DELETE FROM users_github_auths WHERE user_id = @user_id;
DELETE FROM users_integrations WHERE user_id = @user_id;
DELETE FROM users_sources WHERE user_id = @user_id;
DELETE FROM invites WHERE user_id = @user_id;
DELETE FROM teams WHERE id IN (SELECT team_id FROM users_teams WHERE user_id = @user_id);
DELETE FROM users_teams WHERE user_id = @user_id;
DELETE FROM ratings WHERE user_id = @user_id;
DELETE FROM users_uploads_history WHERE user_id = @user_id;

UPDATE purchases SET enabled = 0 WHERE id IN (SELECT purchase_id FROM users_purchases WHERE user_id = @user_id);
DELETE FROM users_purchases WHERE user_id = @user_id;

DELETE FROM slices_symbols WHERE symbol_uuid IN (SELECT uuid FROM symbols WHERE id IN (SELECT symbol_id FROM uploads_symbols WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id)));
DELETE FROM symbols WHERE id IN (SELECT symbol_id FROM uploads_symbols WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id));
DELETE FROM symbols_children WHERE symbol_id IN (SELECT symbol_id FROM uploads_symbols WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id));
DELETE FROM uploads_symbols WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id);
DELETE FROM slices WHERE id IN (SELECT slice_id FROM artboards_slices WHERE artboard_id IN (SELECT artboard_id FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id))));
DELETE FROM artboards_slices WHERE artboard_id IN (SELECT artboard_id FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id)));
DELETE FROM comment_votes WHERE comment_id IN (SELECT comment_id FROM artboards_comments WHERE artboard_id IN (SELECT artboard_id FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id))));
DELETE FROM comments WHERE id IN (SELECT comment_id FROM artboards_comments WHERE artboard_id IN (SELECT artboard_id FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id))));
DELETE FROM artboards_comments WHERE artboard_id IN (SELECT artboard_id FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id)));
DELETE FROM artboards WHERE id IN (SELECT artboard_id FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id)));
DELETE FROM pages_artboards WHERE page_id IN (SELECT page_id FROM uploads_pages WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id));
DELETE FROM pages WHERE id IN (SELECT page_id FROM uploads_pages WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id));
DELETE FROM uploads_pages WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id);
DELETE FROM fonts WHERE id IN (SELECT font_id FROM uploads_fonts WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id));
DELETE FROM users_fonts WHERE font_id IN (SELECT font_id FROM uploads_fonts WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id));
DELETE FROM uploads_fonts WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id);
DELETE FROM invites WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id);
DELETE FROM users_teams WHERE team_id IN (SELECT team_id FROM uploads_teams WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id));
DELETE FROM teams WHERE id IN (SELECT team_id FROM uploads_teams WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id));
DELETE FROM uploads_teams WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id);
DELETE FROM uploads_process WHERE upload_id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id);
DELETE FROM uploads WHERE id IN (SELECT upload_id FROM users_uploads WHERE user_id = @user_id);
DELETE FROM users_uploads WHERE user_id = @user_id;
COMMIT;




-- UPDATE w/ SELECT
UPDATE uploads AS `dest`, (
   SELECT id FROM uploads
   INNER JOIN users_uploads ON uploads.id = users_uploads.upload_id
   WHERE uploads.enabled = 0 AND uploads.artboards < 20 AND (users_uploads.user_id = 130 OR users_uploads.user_id = 162)
) AS `src`
SET `dest`.`enabled` = 1
WHERE `src`.`id` = `dest`.`id`;

#-- update table in place
UPDATE `github_auths` AS `dest`, (
   SELECT `github_auths`.`id` FROM `github_auths`
   INNER JOIN `users_github_auths` ON `github_auths`.`id` = `users_github_auths`.`github_id`
   WHERE `users_github_auths`.`user_id` = 259 AND `github_auths`.`id` != 2
   LIMIT 1) AS `src`
SET `dest`.`enabled` = 0 WHERE `dest`.`id` = `src`.`id`;


SELECT
  CONCAT(`type`, "s") AS `type`,
  COUNT(*) AS `total`
FROM `slices`
INNER JOIN `artboards_slices` ON `slices`.`id` = `artboards_slices`.`slice_id`
INNER JOIN `pages_artboards` ON `artboards_slices`.`artboard_id` = `pages_artboards`.`artboard_id`
INNER JOIN `uploads_pages` ON `pages_artboards`.`page_id` = `uploads_pages`.`page_id`
WHERE `uploads_pages`.`upload_id` = @upload_id
GROUP BY `type`;




ALTER TABLE slices AUTO_INCREMENT = 162915;
ALTER TABLE `designengine`.`users` CHANGE COLUMN `type` `type` varchar(255) NOT NULL DEFAULT 'free_user';



-- insert if field unique
INSERT INTO symbols (
   id,
   uuid,
   title,
   type,
   filename,
   meta,
   added
) SELECT
   NULL,
   'DD1EC75E-527D-41D6-8F27-AC283FD39155',
   'Icon',
   'group',
   'http://cdn.designengine.ai/symbols/237/DD1EC75E-527D-41D6-8F27-AC283FD39155-',
   '{"absOrigin":{"x":-314,"y":4689},"frame":{"origin":{"x":20,"y":237},"size":{"width":29,"height":29}},"padding":{"top":7,"left":7,"bottom":15,"right":131},"rotation":0,"opacity":1,"fillColor":"","radius":0,"styles":[{"border":[],"shadow":[],"innerShadow":[]}],"blendMode":"","font":[]}',
   UTC_TIMESTAMP()
FROM slices
WHERE NOT EXISTS (SELECT id FROM slices WHERE uuid = 'DD1EC75E-527D-41D6-8F27-AC283FD39155')
LIMIT 1;



-- insert into
INSERT INTO `users_uploads` (`user_id`, `upload_id`) SELECT `id`, 3 FROM `users` WHERE `id` != 1 AND `type` = "user"


#-- stored procedures --#
CALL UploadTotals(64, @symbol_tot, @page_tot, @artboard_tot, @slice_tot, @comment_tot, @vote_tot, @file_tot, @invite_tot, @team_tot) ; SELECT @symbol_tot, @page_tot, @artboard_tot, @slice_tot, @comment_tot, @vote_tot, @file_tot, @invite_tot, @team_tot;
CALL ResetUpload(64);

CALL RemoveUpload(64, @symbol_tot, @page_tot, @artboard_tot, @slice_tot, @comment_tot, @vote_tot, @file_tot, @invite_tot, @team_tot) ; SELECT @symbol_tot, @page_tot, @artboard_tot, @slice_tot, @comment_tot, @vote_tot, @file_tot, @invite_tot, @team_tot;

$end_time = strtotime($processed_obj->end_time);

>>> datetime.now().strftime('%Y-%m-%d %H:%M:%S')
'2019-01-30 20:34:11'

>>> datetime.strptime("2019-01-31 11:02:44", '%Y-%m-%d %H:%M:%S')
>>> processed = "2019-01-31 11:02:44"
>>> datetime.strptime(processed, '%Y-%m-%d %H:%M:%S')
datetime.datetime(2019, 1, 31, 11, 2, 44)

>>> datetime.fromtimestamp(1548909285)
datetime.datetime(2019, 1, 30, 20, 34, 45)







MSSymbolOverride w/ Change:
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Mockup / Screen  [<MSSymbolOverride: 0x6000016e0cd0>]

Override Type: [MSSymbolOverride]
overridePoint: [037306AD-27D9-4BA1-83DB-C85EDA7935A4]
master: Mockup / Screen  [C1EDE745-C7AF-413C-B124-54909A60AD58]
isEditable: true
children: (
    "<MSSymbolOverride: 0x600001027110>",
    "<MSSymbolOverride: 0x6000010270c0>"
)
parent: null
hasOverride: true
affectedLayer: Screen [037306AD-27D9-4BA1-83DB-C85EDA7935A4] (MSImmutableSymbolInstance)
defaultValue: 5A51330F-E1DF-4BE6-87B6-7FEE0574CAAC
currentValue: 96AE6FCC-C702-47C0-8D77-958B8EBF8843
isSymbolOverride: true


MSSymbolOverride w/o Change:
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Screen [<MSSymbolOverride: 0x6000017bd950>]

Override Type: [MSSymbolOverride]
overridePoint: [53F802B0-E308-461C-85F1-B7A3CB6FCE05]
master: State / _Screen - Photo [945211D9-2863-4BFE-9F09-EE09BFBB40A4]
isEditable: true
children: Overlay
parent: null
hasOverride: false
affectedLayer: ↳Overlay [53F802B0-E308-461C-85F1-B7A3CB6FCE05] (MSImmutableSymbolInstance)
defaultValue: 2EE68C12-A54A-4C62-85A5-0DE26516DEBA
currentValue: 2EE68C12-A54A-4C62-85A5-0DE26516DEBA
isSymbolOverride: true



MSAvailableOverride w/ Change:
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Chat Popup [<MSAvailableOverride: 0x6000068bbb00>]

Override Type: [MSAvailableOverride]
overridePoint: [F5B3CD18-2C5B-4CBF-940B-6939A461A6CA]
master: Chat Popup [D3F52552-19D9-4C70-B7E0-9A6125271A9C]
isEditable: true
children:
parent: null
hasOverride: true
affectedLayer: Display Name [F5B3CD18-2C5B-4CBF-940B-6939A461A6CA] (MSImmutableTextLayer)
defaultValue: Seth Cottle
currentValue: Arthur Pewty
isSymbolOverride: false


MSAvailableOverride w/o Change
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Chat Popup [<MSAvailableOverride: 0x6000068bb180>]

Override Type: [MSAvailableOverride]
overridePoint: [58F21038-630F-44CC-96B5-91BDFECCD3E0]
master: Chat Popup [D3F52552-19D9-4C70-B7E0-9A6125271A9C]
isEditable: true
children:
parent: null
hasOverride: false
affectedLayer: User Profile [58F21038-630F-44CC-96B5-91BDFECCD3E0] (MSImmutableOvalShape)
defaultValue: <MSImageData: 0x6000099b3e90>
currentValue: <MSImageData: 0x6000099b3e90>
isSymbolOverride: false







var app = NSApplication.sharedApplication();
var doc = context.document;


// =-=-=-=-=-=-=-=-=-=-=-=-=-=[|]=-=-=-=-=-=-=-=-=-=-=-=-=-= //
var symbols = [];
var pageEnumerator = doc.pages().objectEnumerator();
while (page = pageEnumerator.nextObject()) {
  if (page.name() == "Symbols") {
    continue;
  }

  [doc setCurrentPage:page];
  var layerEnumerator = page.children().objectEnumerator();
  while (layer = layerEnumerator.nextObject()) {
    if (layer.isKindOfClass(MSSymbolInstance)) {
      var overrides = NSMutableDictionary.dictionaryWithDictionary(layer.overrides() || NSDictionary.dictionary());
      layer.availableOverrides().forEach(function(availableOverride) {
      var symbolMaster = availableOverride.master();
      var overridePt = availableOverride.overridePoint();
      var overrideParent = availableOverride.parent();
      var children = availableOverride.children();
      var affectedLayer = availableOverride.affectedLayer();

      var msg = "Override Type: ["+availableOverride.className()+"]\n";
      msg += "overridePoint: ["+overridePt.toString().split("_").shift()+"]\n";
      msg += "master: "+symbolMaster.name()+" ["+symbolMaster.objectID()+"]\n";
      msg += "isEditable: "+(availableOverride.isEditable() == 1)+"\n";
      msg += "children: "+children+"\n";
      msg += "parent: "+((overrideParent) ? (overrideParent.name()+" ["+overrideParent.objectID()+"]") : "null")+"\n";
      msg += "hasOverride: "+(availableOverride.hasOverride() == 1)+"\n";
      msg += "affectedLayer: "+affectedLayer.name()+" ["+affectedLayer.objectID()+"] ("+affectedLayer.className()+")\n";
      msg += "defaultValue: "+availableOverride.defaultValue()+"\n";
      msg += "currentValue: "+availableOverride.currentValue()+"\n";
      msg += "isSymbolOverride: "+(overridePt.isSymbolOverride() == 1)+"\n";

      app.displayDialog_withTitle(msg, layer.name()+" ["+availableOverride+"]");
      });
    }
  }
}

return;



var layer = (context.selection.length > 0) ? context.selection[0] : null;
if (!layer) {
  context.document.showMessage("Select layer first!");
  return;
}

log("LAYER: "+layer.name()+" ["+layer.objectID()+"] ("+String(layer.className())+")");
if (layer.isKindOfClass(MSSymbolInstance)) {
  var overrides = NSMutableDictionary.dictionaryWithDictionary(layer.overrides() || NSDictionary.dictionary());
  layer.availableOverrides().forEach(function(availableOverride) {
    var symbolMaster = availableOverride.master();
    var overridePt = availableOverride.overridePoint();
    var overrideParent = availableOverride.parent();
    var affectedLayer = availableOverride.affectedLayer();

    var children = [];
    if (availableOverride.isKindOfClass(MSSymbolOverride)) {
      availableOverride.children().forEach(function(child) {
        children.push(child.affectedLayer().name());
      });
    }

    var msg = "Override Type: ["+availableOverride.className()+"]\n";
    msg += "overridePoint: ["+overridePt.toString().split("_").shift()+"]\n";
    msg += "master: "+symbolMaster.name()+" ["+symbolMaster.objectID()+"]\n";
    msg += "isEditable: "+(availableOverride.isEditable() == 1)+"\n";
    msg += "children: "+children+"\n";
    msg += "parent: "+((overrideParent) ? (overrideParent.name()+" ["+overrideParent.objectID()+"]") : "null")+"\n";
    msg += "hasOverride: "+(availableOverride.hasOverride() == 1)+"\n";
    msg += "affectedLayer: "+affectedLayer.name()+" ["+affectedLayer.objectID()+"] ("+affectedLayer.className()+")\n";
    msg += "defaultValue: "+availableOverride.defaultValue()+"\n";
    msg += "currentValue: "+availableOverride.currentValue()+"\n";
    msg += "isSymbolOverride: "+(overridePt.isSymbolOverride() == 1)+"\n";

    app.displayDialog_withTitle(msg, layer.name()+" ["+availableOverride+"]");
  });
}

return;







// check either side: (color : color)
/(?=(\w+))\1\ +\:\ \1/



YESTERDAY:
- Site wide polish
- Github tickets

TODAY:
- Github bugs
- Inspector screen zooming / dragging

BLOCKERS:
- None

#--
clear ; cd /labor/clients/modd/projects/sites/designengine.ai && while true; do npm run build > /dev/null 2>&1 ; done
clear ; p=21130 ; nc -l $p 2>&1 > /dev/null & p=21130 ; cat /dev/urandom | env LC_CTYPE=C tr -dc 'a-zA-Z0-9' | fold -w 64 | nc 172.10.235.187 $p
kill -9 `ps ax | grep 'nc -l ' | grep -v grep | awk '{print $1}'` &&

cat /dev/urandom | env LC_CTYPE=C tr -dc 'a-zA-Z0-9' | fold -w 64 | sshpass -p "Xzzz1hQwBIM*" ssh typeoh.com@s4086.gridserver.com "cat > ~/tmp/nc/`date +%s`"







curl -X GET "http://processing.designengine.ai/services/linter.php" -d "lang=js" -d "config=" -d "syntax="
curl -X GET "http://processing.designengine.ai/services/linter.php" -H "Content-Type: application/json" -d ""
curl -X POST "http://processing.designengine.ai/services/linter.php" -d "lang=js" -d "config=" -d "syntax="
curl -X POST "http://processing.designengine.ai/services/linter.php" -H "Content-Type: application/json" -d ""



curl -X POST "http://processing.designengine.ai/services/linter.php" -H "Content-Type: application/json" -d ""

var obj={"lang":"js","config":"","syntax":"\nimport cookie from 'react-cookies';\nimport axios from 'axios';\n\nimport {\n\tHOME,\n\tINSPECT,\n\tLOGIN,\n\tPARTS,\n\tPRESENT,\n\tPROFILE,\n\tRECOVER,\n\tREGISTER,\n\tUPLOAD,\n\tAPI_ENDPT_URL } from '..\/consts\/uris';\nimport { Strings } from '.\/lang';\n\n\nexport function buildInspectorPath(upload, prefix='\/inspect', suffix='') {\n\treturn (`${Strings.trimSlashes(prefix)}\/${upload.id}\/${Strings.uriSlugify(upload.title)}${Strings.trimSlashes(suffix)}`);\n}\n\nexport function buildInspectorURL(upload, prefix='\/inspect', suffix='') {\n\treturn (`${window.location.origin}${buildInspectorPath(upload, prefix, suffix)}`);\n}\n\nexport function idsFromPath() {\n\tconst { pathname } = window.location;\n\tconst inspectorPath = \/\\\/(?:inspect|parts|present)\\\/(\\d+)\\\/.+$\/i;\n\n\tconst navIDs = {\n\t\tuploadID   : ((inspectorPath.test(pathname)) ? pathname.match(inspectorPath)[1] : 0) << 0,\n\t\tpageID     : 0 << 0,\n\t\tartboardID : 0 << 0,\n\t\tsliceID    : 0 << 0\n\t};\n\n\treturn (navIDs);\n}\n\nexport function isHomePage(root=true) {\n\tconst { pathname } = window.location;\n\treturn ((root) ? (pathname === '' || pathname === HOME) : (pathname === '' || pathname === HOME || pathname === INSPECT || pathname === PARTS || pathname === PRESENT));\n}\n\nexport function isInspectorPage() {\n\tconst { pathname } = window.location;\n\treturn ((pathname.includes(`${INSPECT}\/`) || pathname.includes(`${PARTS}\/`) || pathname.includes(`${PRESENT}\/`)) && \/^.+\\\/\\d+\\\/.+$\/.test(pathname));\n}\n\nexport function isLoginPage(exact=false) {\n\tconst { pathname } = window.location;\n\treturn ((exact) ? pathname === LOGIN : pathname.includes(LOGIN));\n}\n\nexport function isProfilePage(exact=false) {\n\tconst { pathname } = window.location;\n\treturn ((exact) ? pathname === PROFILE : pathname.includes(PROFILE));\n}\n\nexport function isRecoverPage(exact=false) {\n\tconst { pathname } = window.location;\n\treturn ((exact) ? pathname === RECOVER : pathname.includes(RECOVER));\n}\n\nexport function isRegisterPage(exact=false) {\n\tconst { pathname } = window.location;\n\treturn ((exact) ? pathname === REGISTER : pathname.includes(REGISTER));\n}\n\nexport function isUploadPage(exact=false) {\n\tconst { pathname } = window.location;\n\treturn ((exact) ? pathname === UPLOAD : pathname.includes(UPLOAD));\n}\n\nexport function isUserLoggedIn() {\n\treturn (cookie.load('user_id') !== '0');\n}\n\nexport function sendToSlack(message, callback=null) {\n\tlet formData = new FormData();\n\tformData.append('action', 'SLACK');\n\tformData.append('message', message);\n\taxios.post(API_ENDPT_URL, formData)\n\t\t.then((response) => {\n\t\t\tconsole.log(\"SLACK\", response.data);\n\t\t\tif (callback) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}).catch((error) => {\n\t});\n}\n"




PAYLOAD OBJ:
var obj={"lang":"js","config":"","syntax":"\nimport cookie from 'react-cookies';\nimport axios from 'axios';\n\nimport {\n\tHOME,\n\tINSPECT,\n\tLOGIN,\n\tPARTS,\n\tPRESENT,\n\tPROFILE,\n\tRECOVER,\n\tREGISTER,\n\tUPLOAD,\n\tAPI_ENDPT_URL } from '..\/consts\/uris';\nimport { Strings } from '.\/lang';\n\n\nexport function buildInspectorPath(upload, prefix='\/inspect', suffix='') {\n\treturn (`${Strings.trimSlashes(prefix)}\/${upload.id}\/${Strings.uriSlugify(upload.title)}${Strings.trimSlashes(suffix)}`);\n}\n\nexport function buildInspectorURL(upload, prefix='\/inspect', suffix='') {\n\treturn (`${window.location.origin}${buildInspectorPath(upload, prefix, suffix)}`);\n}\n\nexport function idsFromPath() {\n\tconst { pathname } = window.location;\n\tconst inspectorPath = \/\\\/(?:inspect|parts|present)\\\/(\\d+)\\\/.+$\/i;\n\n\tconst navIDs = {\n\t\tuploadID   : ((inspectorPath.test(pathname)) ? pathname.match(inspectorPath)[1] : 0) << 0,\n\t\tpageID     : 0 << 0,\n\t\tartboardID : 0 << 0,\n\t\tsliceID    : 0 << 0\n\t};\n\n\treturn (navIDs);\n}\n\nexport function isHomePage(root=true) {\n\tconst { pathname } = window.location;\n\treturn ((root) ? (pathname === '' || pathname === HOME) : (pathname === '' || pathname === HOME || pathname === INSPECT || pathname === PARTS || pathname === PRESENT));\n}\n\nexport function isInspectorPage() {\n\tconst { pathname } = window.location;\n\treturn ((pathname.includes(`${INSPECT}\/`) || pathname.includes(`${PARTS}\/`) || pathname.includes(`${PRESENT}\/`)) && \/^.+\\\/\\d+\\\/.+$\/.test(pathname));\n}\n\nexport function isLoginPage(exact=false) {\n\tconst { pathname } = window.location;\n\treturn ((exact) ? pathname === LOGIN : pathname.includes(LOGIN));\n}\n\nexport function isProfilePage(exact=false) {\n\tconst { pathname } = window.location;\n\treturn ((exact) ? pathname === PROFILE : pathname.includes(PROFILE));\n}\n\nexport function isRecoverPage(exact=false) {\n\tconst { pathname } = window.location;\n\treturn ((exact) ? pathname === RECOVER : pathname.includes(RECOVER));\n}\n\nexport function isRegisterPage(exact=false) {\n\tconst { pathname } = window.location;\n\treturn ((exact) ? pathname === REGISTER : pathname.includes(REGISTER));\n}\n\nexport function isUploadPage(exact=false) {\n\tconst { pathname } = window.location;\n\treturn ((exact) ? pathname === UPLOAD : pathname.includes(UPLOAD));\n}\n\nexport function isUserLoggedIn() {\n\treturn (cookie.load('user_id') !== '0');\n}\n\nexport function sendToSlack(message, callback=null) {\n\tlet formData = new FormData();\n\tformData.append('action', 'SLACK');\n\tformData.append('message', message);\n\taxios.post(API_ENDPT_URL, formData)\n\t\t.then((response) => {\n\t\t\tconsole.log(\"SLACK\", response.data);\n\t\t\tif (callback) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}).catch((error) => {\n\t});\n}\n"}


STRINGIFY:
"{"lang":"js","config":"","syntax":"\nimport cookie from 'react-cookies';\nimport axios from 'axios';\n\nimport {\n\tHOME,\n\tINSPECT,\n\tLOGIN,\n\tPARTS,\n\tPRESENT,\n\tPROFILE,\n\tRECOVER,\n\tREGISTER,\n\tUPLOAD,\n\tAPI_ENDPT_URL } from '../consts/uris';\nimport { Strings } from './lang';\n\n\nexport function buildInspectorPath(upload, prefix='/inspect', suffix='') {\n\treturn (`${Strings.trimSlashes(prefix)}/${upload.id}/${Strings.uriSlugify(upload.title)}${Strings.trimSlashes(suffix)}`);\n}\n\nexport function buildInspectorURL(upload, prefix='/inspect', suffix='') {\n\treturn (`${window.location.origin}${buildInspectorPath(upload, prefix, suffix)}`);\n}\n\nexport function idsFromPath() {\n\tconst { pathname } = window.location;\n\tconst inspectorPath = /\\/(?:inspect|parts|present)\\/(\\d+)\\/.+$/i;\n\n\tconst navIDs = {\n\t\tuploadID   : ((inspectorPath.test(pathname)) ? pathname.match(inspectorPath)[1] : 0) << 0,\n\t\tpageID     : 0 << 0,\n\t\tartboardID : 0 << 0,\n\t\tsliceID    : 0 << 0\n\t};\n\n\treturn (navIDs);\n}\n\nexport function isHomePage(root=true) {\n\tconst { pathname } = window.location;\n\treturn ((root) ? (pathname === '' || pathname === HOME) : (pathname === '' || pathname === HOME || pathname === INSPECT || pathname === PARTS || pathname === PRESENT));\n}\n\nexport function isInspectorPage() {\n\tconst { pathname } = window.location;\n\treturn ((pathname.includes(`${INSPECT}/`) || pathname.includes(`${PARTS}/`) || pathname.includes(`${PRESENT}/`)) && /^.+\\/\\d+\\/.+$/.test(pathname));\n}\n\nexport function isLoginPage(exact=false) {\n\tconst { pathname } = window.location;\n\treturn ((exact) ? pathname === LOGIN : pathname.includes(LOGIN));\n}\n\nexport function isProfilePage(exact=false) {\n\tconst { pathname } = window.location;\n\treturn ((exact) ? pathname === PROFILE : pathname.includes(PROFILE));\n}\n\nexport function isRecoverPage(exact=false) {\n\tconst { pathname } = window.location;\n\treturn ((exact) ? pathname === RECOVER : pathname.includes(RECOVER));\n}\n\nexport function isRegisterPage(exact=false) {\n\tconst { pathname } = window.location;\n\treturn ((exact) ? pathname === REGISTER : pathname.includes(REGISTER));\n}\n\nexport function isUploadPage(exact=false) {\n\tconst { pathname } = window.location;\n\treturn ((exact) ? pathname === UPLOAD : pathname.includes(UPLOAD));\n}\n\nexport function isUserLoggedIn() {\n\treturn (cookie.load('user_id') !== '0');\n}\n\nexport function sendToSlack(message, callback=null) {\n\tlet formData = new FormData();\n\tformData.append('action', 'SLACK');\n\tformData.append('message', message);\n\taxios.post(API_ENDPT_URL, formData)\n\t\t.then((response) => {\n\t\t\tconsole.log(\"SLACK\", response.data);\n\t\t\tif (callback) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}).catch((error) => {\n\t});\n}\n"}"








import cookie from 'react-cookies';
import axios from 'axios';

import {
	HOME,
	INSPECT,
	LOGIN,
	PARTS,
	PRESENT,
	PROFILE,
	RECOVER,
	REGISTER,
	UPLOAD,
	API_ENDPT_URL } from '../consts/uris';
import { Strings } from './lang';


export function buildInspectorPath(upload, prefix='/inspect', suffix='') {
	return (`${Strings.trimSlashes(prefix)}/${upload.id}/${Strings.uriSlugify(upload.title)}${Strings.trimSlashes(suffix)}`);
}

export function buildInspectorURL(upload, prefix='/inspect', suffix='') {
	return (`${window.location.origin}${buildInspectorPath(upload, prefix, suffix)}`);
}

export function idsFromPath() {
	const { pathname } = window.location;
	const inspectorPath = /\/(?:inspect|parts|present)\/(\d+)\/.+$/i;

	const navIDs = {
		uploadID   : ((inspectorPath.test(pathname)) ? pathname.match(inspectorPath)[1] : 0) << 0,
		pageID     : 0 << 0,
		artboardID : 0 << 0,
		sliceID    : 0 << 0
	};

	return (navIDs);
}

export function isHomePage(root=true) {
	const { pathname } = window.location;
	return ((root) ? (pathname === '' || pathname === HOME) : (pathname === '' || pathname === HOME || pathname === INSPECT || pathname === PARTS || pathname === PRESENT));
}

export function isInspectorPage() {
	const { pathname } = window.location;
	return ((pathname.includes(`${INSPECT}/`) || pathname.includes(`${PARTS}/`) || pathname.includes(`${PRESENT}/`)) && /^.+\/\d+\/.+$/.test(pathname));
}

export function isLoginPage(exact=false) {
	const { pathname } = window.location;
	return ((exact) ? pathname === LOGIN : pathname.includes(LOGIN));
}

export function isProfilePage(exact=false) {
	const { pathname } = window.location;
	return ((exact) ? pathname === PROFILE : pathname.includes(PROFILE));
}

export function isRecoverPage(exact=false) {
	const { pathname } = window.location;
	return ((exact) ? pathname === RECOVER : pathname.includes(RECOVER));
}

export function isRegisterPage(exact=false) {
	const { pathname } = window.location;
	return ((exact) ? pathname === REGISTER : pathname.includes(REGISTER));
}

export function isUploadPage(exact=false) {
	const { pathname } = window.location;
	return ((exact) ? pathname === UPLOAD : pathname.includes(UPLOAD));
}

export function isUserLoggedIn() {
	return (cookie.load('user_id') !== '0');
}

export function sendToSlack(message, callback=null) {
	let formData = new FormData();
	formData.append('action', 'SLACK');
	formData.append('message', message);
	axios.post(API_ENDPT_URL, formData)
		.then((response) => {
			console.log("SLACK", response.data);
			if (callback) {
				callback();
			}
		}).catch((error) => {
	});
}






@keyframes marquee-banner-intro {
	0%   { display: block; opacity: 0; }
	100% { opacity: 1; }
}

@keyframes marquee-banner-outro {
	0%   { opacity: 1; }
	100% { opacity: 0; }
}

@keyframes marquee-banner-outro-remove {
	0%   { opacity: 1; }
	100% { opacity: 0; display: none; }
}


.artboards-list-wrapper, .parts-list-wrapper {
	width: 100%;
	height: 100%;
	overflow-y: auto;
	padding: 40px 32px 50px 32px;
}

.artboards-list-wrapper-empty, .parts-list-wrapper-empty {
	/*margin-top: -6px;*/
	padding: 0;
	color: #00ff0f;
}

.artboard-list-item, .part-list-item {
	width: 100%;
	padding-bottom: 60px;
}

.artboard-list-item:hover {
	cursor: pointer;
}

--------------------------a5c79c3ea466745f--
